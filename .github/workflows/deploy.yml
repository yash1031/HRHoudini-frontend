name: Deploy to AWS App Runner

on:
  push:
    branches:
      - dev  # Change to your deployment branch

env:
  AWS_REGION: ${{ secrets.AWS_REGION }}
  ECR_REPOSITORY: ${{ secrets.ECR_REPOSITORY }}

jobs:
  deploy:
    name: Build and Push to ECR
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION }}

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v2

    - name: Build, tag, and push image to Amazon ECR
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        IMAGE_TAG: ${{ github.sha }}
      run: |
        docker build \
          --build-arg NEXT_PUBLIC_TOKEN_FOR_FULLSIZE_FILE="${{ secrets.NEXT_PUBLIC_TOKEN_FOR_FULLSIZE_FILE }}" \
          --build-arg NEXT_PUBLIC_TOKEN_FOR_CHAT_MESSAGE="${{ secrets.NEXT_PUBLIC_TOKEN_FOR_CHAT_MESSAGE }}" \
          --build-arg NEXT_PUBLIC_MAX_FILE_SIZE="${{ secrets.NEXT_PUBLIC_MAX_FILE_SIZE }}" \
          --build-arg NEXT_PUBLIC_BACKEND_DOMAIN="${{ secrets.NEXT_PUBLIC_BACKEND_DOMAIN }}" \
          --build-arg NEXT_PUBLIC_STAGE="${{ secrets.NEXT_PUBLIC_STAGE }}" \
          --build-arg NEXT_PUBLIC_WS_URL="${{ secrets.NEXT_PUBLIC_WS_URL }}" \
          -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
        docker tag $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG $ECR_REGISTRY/$ECR_REPOSITORY:latest
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:latest
        echo "Image pushed: $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"